#BlueJ class context
comment0.params=
comment0.target=PaKman()
comment1.params=
comment1.target=void\ reset()
comment2.params=
comment2.target=ch.aplu.jgamegrid.Location\ wherePakman()
comment2.text=\n\ Return\ PaKman's\ location.\n\ @returns\ pakman's\ location\n
comment3.params=
comment3.target=Level\ getLevel()
comment3.text=\n\ Return\ the\ current\ level.\n\ @return\ the\ current\ level\n
comment4.params=level
comment4.target=void\ setupLevel(Level)
comment4.text=\n\ Setup\ the\ given\ level\:\n\ <ul>\n\ \ <li>\ draw\ the\ maze;\ </li>\n\ \ <li>\ put\ pakman\ at\ its\ starting\ position;\ </li>\n\ \ <li>\ create\ the\ ghost(s)\ at\ their\ starting\ positions;\ </li>\n\ \ <li>\ initializes\ internae</li>\n\ </ul>\n
comment5.params=
comment5.target=void\ checkCollision()
comment5.text=\n\ Check\ whether\ pakman\ and\ a\ ghost\ collide.\n\ If\ so,\ call\ gameover().\n
comment6.params=
comment6.target=void\ gameOver()
comment6.text=\n\ Display\ a\ game\ over\ message\ and\ pause\ the\ game.\n
comment7.params=args
comment7.target=void\ main(java.lang.String[])
comment8.params=event
comment8.target=boolean\ keyPressed(java.awt.event.KeyEvent)
comment8.text=KeyListener\ method\ (no\ function\ for\ us)
comment9.params=event
comment9.target=boolean\ keyReleased(java.awt.event.KeyEvent)
comment9.text=\n\ KeyListener\ method.\n\ Here\ we\ act\ on\ the\ (press\ and)\ release\ of\ keys.\n\ Currently\ implemented\:\n\ f\ toggles\ hunting/fleeing\ mode.\n
numComments=10
